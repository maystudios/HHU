<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.org (or in your downloaded distribution).

    To completely disable a check, just comment it out or delete it from the file.
    To suppress certain violations please review suppression filters.

    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
 -->

<module name="Checker">
  <property name="severity" value="warning"/>

  <property name="fileExtensions" value="java"/>

  <module name="TreeWalker">
    <module name="NeedBraces">
      <property name="tokens"
                value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
    </module>
    <module name="LeftCurly">
      <property name="tokens"
                value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                    INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,
                    LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                    OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="RightCurly">
      <property name="id" value="RightCurlySame"/>
      <property name="tokens"
                value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO"/>
    </module>
    <module name="RightCurly">
      <property name="id" value="RightCurlyAlone"/>
      <property name="option" value="alone"/>
      <property name="tokens"
                value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                    INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF,
                    COMPACT_CTOR_DEF"/>
    </module>
    <module name="SuppressionXpathSingleFilter">
      <!-- suppresion is required till https://github.com/checkstyle/checkstyle/issues/7541 -->
      <property name="id" value="RightCurlyAlone"/>
      <property name="query" value="//RCURLY[parent::SLIST[count(./*)=1]
                                     or preceding-sibling::*[last()][self::LCURLY]]"/>
    </module>
    <module name="OneStatementPerLine"/>
    <module name="ArrayTypeStyle"/>
    <module name="PackageName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]+(\.[a-zäöüіßÄÜÖ][a-zäöüіßÄÜÖ0-9]*)*$"/>
      <message key="name.invalidPattern"
               value="Package name ''{0}'' must match pattern ''{1}'', i.e. lowercase."/>
    </module>
    <module name="TypeName">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                    ANNOTATION_DEF, RECORD_DEF"/>
      <message key="name.invalidPattern"
               value="Type name ''{0}'' must match pattern ''{1}'', i.e. UpperCamelCase."/>
    </module>
    <module name="MemberName">
      <property name="format" value="^[a-zäöüіßÄÜÖ][a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*$"/>
      <message key="name.invalidPattern"
               value="Member name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Parameter name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Lambda parameter name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Catch parameter name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Local variable name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="PatternVariableName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Pattern variable name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zäöüіßÄÜÖA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
               value="Class type name ''{0}'' must match pattern ''{1}'', i.e. UpperCamelCaseT or UPPERCASE."/>
    </module>
    <module name="RecordComponentName">
      <property name="format" value="^[a-zäöüіßÄÜÖ]([a-zäöüіßÄÜÖ0-9][a-zäöüіßÄÜÖA-Z0-9]*)?$"/>
      <message key="name.invalidPattern"
               value="Record component name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="RecordTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zäöüіßÄÜÖA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
               value="Record type name ''{0}'' must match pattern ''{1}'', i.e. UpperCamelCaseT or UPPERCASE."/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zäöüіßÄÜÖA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
               value="Method type name ''{0}'' must match pattern ''{1}'', i.e. UpperCamelCaseT or UPPERCASE."/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zäöüіßÄÜÖA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
               value="Interface type name ''{0}'' must match pattern ''{1}'', i.e. UpperCamelCaseT or UPPERCASE."/>
    </module>
    <module name="MethodName">
      <property name="format" value="^[a-zäöüіßÄÜÖ][a-zäöüіßÄÜÖ0-9]\w*$"/>
      <message key="name.invalidPattern"
               value="Method name ''{0}'' must match pattern ''{1}'', i.e. lowerCamelCase."/>
    </module>
    <module name="Indentation">
      <property name="basicOffset" value="4"/>
      <property name="braceAdjustment" value="0"/>
      <property name="caseIndent" value="4"/>
      <property name="throwsIndent" value="4"/>
      <property name="lineWrappingIndentation" value="4"/>
      <property name="arrayInitIndent" value="4"/>
    </module>
    <module name="AbbreviationAsWordInName">
      <property name="ignoreFinal" value="false"/>
      <property name="allowedAbbreviationLength" value="0"/>
      <property name="tokens"
                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                    PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF,
                    RECORD_COMPONENT_DEF"/>
    </module>
  </module>
</module>
